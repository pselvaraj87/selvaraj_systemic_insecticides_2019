import os
import numpy as np
import pandas as pd

from gridded_sims.run.site import project_folder

def catch_1_yr_spline(catch, species):
    # Read spline directly from mini-CSV files generated by Jaline/Caitlin

    ento_base = os.path.join(project_folder, "entomology_calibration/Multi_year_calibration_by_HFCA_180808/minicsv")

    def load_raw_spline(csv_df):
        spline = np.zeros(36)
        raw_spline = np.array(csv_df["Values"])
        spline[4:35] = raw_spline[1:-1]  # Throw out first and last entry
        return spline

    def fill_out_spline(spline):
        spline[0:4] = 0.5 * (spline[12:16] + spline[24:28])
        spline[35] = 0.5 * (spline[11] + spline[23])
        return spline

    # def fill_out_spline(spline):
    #     # Account for the fact that we only really trust the data from indices 4-35 (May 15 - Nov 17)
    #     # Reconstruct shape and amplitude of missing data by inferring from other
    #     year1_factor = spline[4:11].sum()
    #     year2_factor = spline[16:23].sum()
    #     year3_factor = spline[28:35].sum()
    #
    #     spline_inferred = spline.copy()
    #
    #     spline_inferred[0:4] = year1_factor * 0.5 * (spline[12:16] / year2_factor + spline[24:28] / year3_factor)
    #     spline_inferred[35] = year3_factor * 0.5 * (spline[11] / year1_factor + spline[23] / year2_factor)
    #
    #     return spline_inferred


    if species == "arabiensis":
        species = "gambiae"

    if species == "funestus":
        df = pd.read_csv(os.path.join(ento_base, "Three_funestus_LifeAdj_rank0.csv"))
        spline = fill_out_spline(load_raw_spline(df))
    elif species == "gambiae":
        if catch == "Panjane-Caputine":
            df = pd.read_csv(os.path.join(ento_base, "Panjane_gambiae_frankenspline.csv"))
            spline = fill_out_spline(load_raw_spline(df))
        elif catch == "Magude-Sede-Facazissa":
            df = pd.read_csv(os.path.join(ento_base, "Magude-Sede_gambiae_LifeAdj_rank0.csv"))
            spline = fill_out_spline(load_raw_spline(df))
        elif catch != "Moine" and catch != "Mahel":
            df = pd.read_csv(os.path.join(ento_base, "{}_{}_frankenspline.csv".format(catch, species)))
            spline = fill_out_spline(load_raw_spline(df))
        elif catch == "Moine" or catch == "Mahel":
            panjane_df = pd.read_csv(os.path.join(ento_base, "Panjane_gambiae_frankenspline.csv"))
            chichuco_df = pd.read_csv(os.path.join(ento_base, "Chichuco_gambiae_frankenspline.csv"))
            panjane_spline = fill_out_spline(load_raw_spline(panjane_df))
            chichuco_spline = fill_out_spline(load_raw_spline(chichuco_df))

            spline = (panjane_spline + chichuco_spline) / 2.

    # Return associated times:
    times_1yr = [0.0, 30.417, 60.833, 91.25, 121.667, 152.083, 182.5, 212.917, 243.333, 273.75, 304.167, 334.583]

    return [times_1yr, list(spline[12:24])]
